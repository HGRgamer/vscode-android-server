diff --git a/configure.py b/configure.py
index d3192ca04c..561c55f798 100755
--- a/configure.py
+++ b/configure.py
@@ -1242,7 +1242,7 @@ def configure_node(o):
   o['variables']['want_separate_host_toolset'] = int(cross_compiling)
 
   # Enable branch protection for arm64
-  if target_arch == 'arm64':
+  if target_arch == 'arm64-disablezz':
     o['cflags']+=['-msign-return-address=all']
 
   if options.node_snapshot_main is not None:
diff --git a/deps/uv/src/unix/core.c b/deps/uv/src/unix/core.c
index 71e9c525c4..9f4666eae3 100644
--- a/deps/uv/src/unix/core.c
+++ b/deps/uv/src/unix/core.c
@@ -1125,7 +1125,7 @@ int uv_os_tmpdir(char* buffer, size_t* size) {
 
   /* No temp environment variables defined */
   #if defined(__ANDROID__)
-    buf = "/data/local/tmp";
+    buf = "/data/data/vn.vhn.vsc/files/tmp";
   #else
     buf = "/tmp";
   #endif
diff --git a/deps/uv/src/unix/fs.c b/deps/uv/src/unix/fs.c
index 362c36c6a0..575672d5e3 100644
--- a/deps/uv/src/unix/fs.c
+++ b/deps/uv/src/unix/fs.c
@@ -1339,7 +1339,7 @@ static ssize_t uv__fs_copyfile(uv_fs_t* req) {
 #endif  /* !__linux__ */
   }
 
-#ifdef FICLONE
+#ifdef FICLONE_DISABLEDZZZ
   if (req->flags & UV_FS_COPYFILE_FICLONE ||
       req->flags & UV_FS_COPYFILE_FICLONE_FORCE) {
     if (ioctl(dstfd, FICLONE, srcfd) == 0) {
diff --git a/deps/uv/src/unix/process.c b/deps/uv/src/unix/process.c
index 91bf3c5070..0efe955336 100644
--- a/deps/uv/src/unix/process.c
+++ b/deps/uv/src/unix/process.c
@@ -302,7 +302,7 @@ static void uv__process_child_init(const uv_process_options_t* options,
 
   if (options->cwd != NULL && chdir(options->cwd))
     uv__write_errno(error_fd);
-
+#if ZZZDISABLE
   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {
     /* When dropping privileges from root, the `setgroups` call will
      * remove any extraneous groups. If we don't call this, then
@@ -319,7 +319,7 @@ static void uv__process_child_init(const uv_process_options_t* options,
 
   if ((options->flags & UV_PROCESS_SETUID) && setuid(options->uid))
     uv__write_errno(error_fd);
-
+#endif
   if (options->env != NULL) {
     environ = options->env;
   }
diff --git a/deps/uv/src/unix/sysinfo-memory.c b/deps/uv/src/unix/sysinfo-memory.c
index 23b4fc6e91..b09b8fbe09 100644
--- a/deps/uv/src/unix/sysinfo-memory.c
+++ b/deps/uv/src/unix/sysinfo-memory.c
@@ -26,10 +26,10 @@
 #include <sys/sysinfo.h>
 
 uint64_t uv_get_free_memory(void) {
-  struct sysinfo info;
+//  struct sysinfo info;
 
-  if (sysinfo(&info) == 0)
-    return (uint64_t) info.freeram * info.mem_unit;
+//  if (sysinfo(&info) == 0)
+//    return (uint64_t) info.freeram * info.mem_unit;
   return 0;
 }
 
diff --git a/deps/uv/uv.gyp b/deps/uv/uv.gyp
index 093f611fb6..d0885429fa 100644
--- a/deps/uv/uv.gyp
+++ b/deps/uv/uv.gyp
@@ -40,7 +40,7 @@
     {
       'target_name': 'libuv',
       'type': '<(uv_library)',
-      'include_dirs': [
+      'include_dirs+': [
         'include',
         'src/',
       ],
@@ -55,7 +55,7 @@
           '<@(shared_unix_defines)',
           '<@(shared_zos_defines)',
         ],
-        'include_dirs': [ 'include' ],
+        'include_dirs+': [ 'include' ],
         'conditions': [
           ['OS == "linux"', {
             'defines': [ '_POSIX_C_SOURCE=200112' ],
@@ -247,6 +247,7 @@
             'src/unix/procfs-exepath.c',
             'src/unix/random-getrandom.c',
             'src/unix/random-sysctl-linux.c',
+            'src/unix/epoll.c',
           ],
           'link_settings': {
             'libraries': [ '-ldl', '-lrt' ],
diff --git a/deps/v8/src/flags/flag-definitions.h b/deps/v8/src/flags/flag-definitions.h
index d8e1dd6b9c..c58652c118 100644
--- a/deps/v8/src/flags/flag-definitions.h
+++ b/deps/v8/src/flags/flag-definitions.h
@@ -1971,7 +1971,7 @@ DEFINE_PERF_PROF_IMPLICATION(perf_prof, perf_prof_unwinding_info)
 #undef DEFINE_PERF_PROF_BOOL
 #undef DEFINE_PERF_PROF_IMPLICATION
 
-DEFINE_STRING(gc_fake_mmap, "/tmp/__v8_gc__",
+DEFINE_STRING(gc_fake_mmap, "/data/data/vn.vhn.vsc/files/tmp/__v8_gc__",
               "Specify the name of the file for fake gc mmap used in ll_prof")
 DEFINE_BOOL(log_internal_timer_events, false, "Time internal events.")
 DEFINE_IMPLICATION(log_internal_timer_events, prof)
diff --git a/deps/v8/src/trap-handler/trap-handler.h b/deps/v8/src/trap-handler/trap-handler.h
index 0b3a6e0a70..fc6ede2c18 100644
--- a/deps/v8/src/trap-handler/trap-handler.h
+++ b/deps/v8/src/trap-handler/trap-handler.h
@@ -18,21 +18,7 @@ namespace internal {
 namespace trap_handler {
 
 // X64 on Linux, Windows, MacOS, FreeBSD.
-#if V8_HOST_ARCH_X64 && V8_TARGET_ARCH_X64 &&                        \
-    ((V8_OS_LINUX && !V8_OS_ANDROID) || V8_OS_WIN || V8_OS_MACOSX || \
-     V8_OS_FREEBSD)
-#define V8_TRAP_HANDLER_SUPPORTED true
-// Arm64 (non-simulator) on Mac.
-#elif V8_TARGET_ARCH_ARM64 && V8_HOST_ARCH_ARM64 && V8_OS_MACOSX
-#define V8_TRAP_HANDLER_SUPPORTED true
-// Arm64 simulator on x64 on Linux or Mac.
-#elif V8_TARGET_ARCH_ARM64 && V8_HOST_ARCH_X64 && (V8_OS_LINUX || V8_OS_MACOSX)
-#define V8_TRAP_HANDLER_VIA_SIMULATOR
-#define V8_TRAP_HANDLER_SUPPORTED true
-// Everything else is unsupported.
-#else
 #define V8_TRAP_HANDLER_SUPPORTED false
-#endif
 
 // Setup for shared library export.
 #if defined(BUILDING_V8_SHARED) && defined(V8_OS_WIN)
diff --git a/lib/child_process.js b/lib/child_process.js
index a4def6acce..134809c206 100644
--- a/lib/child_process.js
+++ b/lib/child_process.js
@@ -611,10 +611,8 @@ function normalizeSpawnArguments(file, args, options) {
     } else {
       if (typeof options.shell === 'string')
         file = options.shell;
-      else if (process.platform === 'android')
-        file = '/system/bin/sh';
       else
-        file = '/bin/sh';
+        file = '/data/data/vn.vhn.vsc/files/usr/bin/sh';
       args = ['-c', command];
     }
   }
diff --git a/lib/os.js b/lib/os.js
index 860348a472..b73ba0a3c7 100644
--- a/lib/os.js
+++ b/lib/os.js
@@ -191,7 +191,7 @@ function tmpdir() {
     path = safeGetenv('TMPDIR') ||
            safeGetenv('TMP') ||
            safeGetenv('TEMP') ||
-           '/tmp';
+           '/data/data/vn.vhn.vsc/files/tmp';
     if (path.length > 1 && StringPrototypeEndsWith(path, '/'))
       path = StringPrototypeSlice(path, 0, -1);
   }
diff --git a/node.gyp b/node.gyp
index 24505da7ba..63cc9a3856 100644
--- a/node.gyp
+++ b/node.gyp
@@ -402,6 +402,7 @@
 
       'include_dirs': [
         'src',
+        'deps/cares/src/lib',
         '<(SHARED_INTERMEDIATE_DIR)' # for node_natives.h
       ],
       'dependencies': [
@@ -1126,165 +1127,6 @@
         }],
       ],
     }, # fuzz_env
-    {
-      'target_name': 'cctest',
-      'type': 'executable',
-
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/base64/base64.gyp:base64',
-        'deps/googletest/googletest.gyp:gtest',
-        'deps/googletest/googletest.gyp:gtest_main',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'node_dtrace_header',
-        'node_dtrace_ustack',
-        'node_dtrace_provider',
-      ],
-
-      'includes': [
-        'node.gypi'
-      ],
-
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-        'test/cctest',
-      ],
-
-      'defines': [
-        'NODE_ARCH="<(target_arch)"',
-        'NODE_PLATFORM="<(OS)"',
-        'NODE_WANT_INTERNALS=1',
-      ],
-
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'src/node_code_cache_stub.cc',
-        'test/cctest/node_test_fixture.cc',
-        'test/cctest/node_test_fixture.h',
-        'test/cctest/test_aliased_buffer.cc',
-        'test/cctest/test_base64.cc',
-        'test/cctest/test_base_object_ptr.cc',
-        'test/cctest/test_node_postmortem_metadata.cc',
-        'test/cctest/test_environment.cc',
-        'test/cctest/test_js_native_api_v8.cc',
-        'test/cctest/test_linked_binding.cc',
-        'test/cctest/test_node_api.cc',
-        'test/cctest/test_per_process.cc',
-        'test/cctest/test_platform.cc',
-        'test/cctest/test_report.cc',
-        'test/cctest/test_json_utils.cc',
-        'test/cctest/test_sockaddr.cc',
-        'test/cctest/test_traced_value.cc',
-        'test/cctest/test_util.cc',
-        'test/cctest/test_url.cc',
-      ],
-
-      'conditions': [
-        [ 'node_use_openssl=="true"', {
-          'defines': [
-            'HAVE_OPENSSL=1',
-          ],
-          'sources': [
-            'test/cctest/test_crypto_clienthello.cc',
-            'test/cctest/test_node_crypto.cc',
-          ]
-        }],
-        ['v8_enable_inspector==1', {
-          'sources': [
-            'test/cctest/test_inspector_socket.cc',
-            'test/cctest/test_inspector_socket_server.cc'
-          ],
-          'defines': [
-            'HAVE_INSPECTOR=1',
-          ],
-        }, {
-           'defines': [
-             'HAVE_INSPECTOR=0',
-           ]
-        }],
-        ['OS=="solaris"', {
-          'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
-        }],
-        # Skip cctest while building shared lib node for Windows
-        [ 'OS=="win" and node_shared=="true"', {
-          'type': 'none',
-        }],
-        [ 'node_shared=="true"', {
-          'xcode_settings': {
-            'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
-          },
-        }],
-        ['OS=="win"', {
-          'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
-          ],
-        }],
-      ],
-    }, # cctest
-
-    {
-      'target_name': 'embedtest',
-      'type': 'executable',
-
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'node_dtrace_header',
-        'node_dtrace_ustack',
-        'node_dtrace_provider',
-      ],
-
-      'includes': [
-        'node.gypi'
-      ],
-
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-        'test/embedding',
-      ],
-
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'src/node_code_cache_stub.cc',
-        'test/embedding/embedtest.cc',
-      ],
-
-      'conditions': [
-        ['OS=="solaris"', {
-          'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
-        }],
-        # Skip cctest while building shared lib node for Windows
-        [ 'OS=="win" and node_shared=="true"', {
-          'type': 'none',
-        }],
-        [ 'node_shared=="true"', {
-          'xcode_settings': {
-            'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
-          },
-        }],
-        ['OS=="win"', {
-          'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
-          ],
-        }],
-      ],
-    }, # embedtest
 
     {
       'target_name': 'overlapped-checker',
@@ -1363,59 +1205,13 @@
             'Ws2_32.lib',
           ],
         }],
-      ],
-    }, # mkcodecache
-    {
-      'target_name': 'node_mksnapshot',
-      'type': 'executable',
-
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-      ],
-
-      'includes': [
-        'node.gypi'
-      ],
-
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-      ],
-
-      'defines': [ 'NODE_WANT_INTERNALS=1' ],
-
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'src/node_code_cache_stub.cc',
-        'tools/snapshot/node_mksnapshot.cc',
-      ],
-
-      'conditions': [
-        [ 'node_use_openssl=="true"', {
-          'defines': [
-            'HAVE_OPENSSL=1',
-          ],
-        }],
-        ['v8_enable_inspector==1', {
-          'defines': [
-            'HAVE_INSPECTOR=1',
-          ],
-        }],
-        ['OS=="win"', {
+        ['target_arch=="ia32" or target_arch=="x86"', {
           'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
+            '-latomic',
           ],
         }],
       ],
-    }, # node_mksnapshot
+    }, # mkcodecache
   ], # end targets
 
   'conditions': [
diff --git a/tools/v8_gypfiles/toolchain.gypi b/tools/v8_gypfiles/toolchain.gypi
index ecbd63b53f..2aabab9e2d 100644
--- a/tools/v8_gypfiles/toolchain.gypi
+++ b/tools/v8_gypfiles/toolchain.gypi
@@ -62,7 +62,7 @@
     'mips_use_msa%': 0,
 
     # Print to stdout on Android.
-    'v8_android_log_stdout%': 0,
+    'v8_android_log_stdout%': 1,
 
     'v8_enable_backtrace%': 0,
 
diff --git a/tools/v8_gypfiles/v8.gyp b/tools/v8_gypfiles/v8.gyp
index ed042f8829..f1af995933 100644
--- a/tools/v8_gypfiles/v8.gyp
+++ b/tools/v8_gypfiles/v8.gyp
@@ -1086,6 +1086,7 @@
             '<(V8_ROOT)/src/base/platform/platform-posix.h',
             '<(V8_ROOT)/src/base/platform/platform-posix-time.cc',
             '<(V8_ROOT)/src/base/platform/platform-posix-time.h',
+            '<(V8_ROOT)/src/base/platform/platform-linux.h',
           ],
           'link_settings': {
             'target_conditions': [
@@ -1581,7 +1582,12 @@
           }],
           ['clang or OS!="win"', {
             'conditions': [
-              ['_toolset == "host" and host_arch == "x64" or _toolset == "target" and target_arch=="x64"', {
+              ['_toolset == "host" and host_arch == "x64" and (target_arch == "arm" or target_arch == "ia32" or target_arch == "x86")', {
+                'sources': [
+                  '<(V8_ROOT)/src/heap/base/asm/ia32/push_registers_asm.cc',
+                ],
+              }],
+              ['_toolset == "host" and host_arch == "x64" and (target_arch == "x64" or target_arch == "arm64") or (_toolset == "target" and target_arch == "x64")', {
                 'sources': [
                   '<(V8_ROOT)/src/heap/base/asm/x64/push_registers_asm.cc',
                 ],
