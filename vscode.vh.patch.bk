diff -x node_modules -x build -x .build -x 'out-*' -x out -ru vscode.orig/src/vs/base/browser/ui/dialog/dialog.css vscode/src/vs/base/browser/ui/dialog/dialog.css
--- vscode.orig/src/vs/base/browser/ui/dialog/dialog.css	2020-05-23 06:48:43.809321112 +0000
+++ vscode/src/vs/base/browser/ui/dialog/dialog.css	2020-05-23 08:21:30.063609920 +0000
@@ -24,7 +24,7 @@
 	display: flex;
 	flex-direction: column-reverse;
 	width: min-content;
-	min-width: 500px;
+	min-width: 50vw;
 	max-width: 90vw;
 	min-height: 75px;
 	padding: 10px;
diff -x node_modules -x build -x .build -x 'out-*' -x out -ru vscode.orig/src/vs/editor/contrib/find/findWidget.css vscode/src/vs/editor/contrib/find/findWidget.css
--- vscode.orig/src/vs/editor/contrib/find/findWidget.css	2020-05-23 06:48:43.873321049 +0000
+++ vscode/src/vs/editor/contrib/find/findWidget.css	2020-05-23 08:08:24.789086656 +0000
@@ -185,12 +185,12 @@
 
 /* NARROW (SMALLER THAN REDUCED) */
 .monaco-editor .find-widget.narrow-find-widget {
-	max-width: 257px !important;
+	max-width: calc(100vw - 90px) !important;
 }
 
 /* COLLAPSED (SMALLER THAN NARROW) */
 .monaco-editor .find-widget.collapsed-find-widget {
-	max-width: 170px !important;
+	max-width: calc(100vw - 90px) !important;
 }
 
 .monaco-editor .find-widget.collapsed-find-widget .button.previous,
diff -x node_modules -x build -x .build -x 'out-*' -x out -ru vscode.orig/src/vs/workbench/contrib/preferences/browser/keyboardLayoutPicker.ts vscode/src/vs/workbench/contrib/preferences/browser/keyboardLayoutPicker.ts
--- vscode.orig/src/vs/workbench/contrib/preferences/browser/keyboardLayoutPicker.ts	2020-05-23 06:48:43.917321006 +0000
+++ vscode/src/vs/workbench/contrib/preferences/browser/keyboardLayoutPicker.ts	2020-05-23 08:33:33.483474347 +0000
@@ -35,7 +35,7 @@
 		let layout = this.keymapService.getCurrentKeyboardLayout();
 		if (layout) {
 			let layoutInfo = parseKeyboardLayoutDescription(layout);
-			const text = nls.localize('keyboardLayout', "Layout: {0}", layoutInfo.label);
+			const text = nls.localize('xmobileKeyboardLayout', "KL:{0}", layoutInfo.label);
 
 			this.pickerElement.value = this.statusbarService.addEntry(
 				{
@@ -54,14 +54,14 @@
 			let layoutInfo = parseKeyboardLayoutDescription(layout);
 
 			if (this.pickerElement.value) {
-				const text = nls.localize('keyboardLayout', "Layout: {0}", layoutInfo.label);
+				const text = nls.localize('xmobileKeyboardLayout', "KL:{0}", layoutInfo.label);
 				this.pickerElement.value.update({
 					text,
 					ariaLabel: text,
 					command: KEYBOARD_LAYOUT_OPEN_PICKER
 				});
 			} else {
-				const text = nls.localize('keyboardLayout', "Layout: {0}", layoutInfo.label);
+				const text = nls.localize('xmobileKeyboardLayout', "KL:{0}", layoutInfo.label);
 				this.pickerElement.value = this.statusbarService.addEntry(
 					{
 						text,
